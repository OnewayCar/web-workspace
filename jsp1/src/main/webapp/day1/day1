웹 애플리케이션 프로젝트를 만듭니다.

+ 중요 사항

1. 자바 소스파일 .java 는 java resources 항목에서 파일 생성

2. 웹과 관련된 정적 파일 .html .css .js 이미지 등은 webapp 폴더에 생성

3. 웹과 관련된 동적파일 .jsp 는 webapp 폴더에 생성
jsp 를 사용하면서부터는 html 대신 모든 소스파일은 jsp로 합니다.
* 단, 비동기 통신을 사용할 때에는 html 로 합니다.

4. 웹과 관련된 jsp 를 처리하기 위해서는 반드시 was 역할이 필요. 
우리는 tomcat 사용 => 반드시 서버(웹컨테이너 기능) 가 있어야함

5. 웹에서 사용할 라이브러리는 build path로 설정하지 않고
webapp 하위 폴더 WEB_INF/lib 폴더에 복붙하여 가져옵니다.

6. 웹컨테이너가 처리할 설정파일(배포기술자) web.xml 을 필요로 합니다.
=> 개발자가 웹 프로젝트에 없으면 톰캣의 web.xml 을 기본으로 처리

7. 실행 시 오류가 발생을 했습니다. 오류를 수정한 후 
.java를 수정하고 저장하면 자동으로 빌드하고 tomcat도 프로젝트를 새롭개 로드합니다.
.jsp를 수정하고 저장하면 브라우저에서 새로고침 하세요.

=> 위에 경우는 정상 동작할 때. but 비정상적으로 수정된 코드가 반영이 안되면 톰캣을 재시작

<<JSP와 관련된 문법 요소>>
요청된 jsp 파일은 웹컨테이너(was 서버)가 
.java 소스파일로 변경 -> 컴파일 -> .class 을 was 서버가 저장해놓음
-> .class 
-> was 서버 
-> html
-> 사용자 브라우저에게 전달

1. JSP 기본 문법
1) 스크립트릿: <%   %>
	= 자바 코드 작성

2) 표현식: <%=   %>
* 자바스크립트 표현식 기호 ${} 를 JSP 에서는 el이라고 부릅니다.
	= 태그 요소에 출력 내용 (자바변수,수식,메소드,...) 작성

3) 지시자: <%@ page   %>
: 언어 설정, import 등 jsp 파일에서는 필수적인 지시자
include 지시자 : file="파일명" . file 속성으로 지정된 소스코드를 포함시킴

4) 선언부 : <%!   %>
	변수는 스크립트릿 안에서 선언하고 쓰는 것이 일반적이고
	메소드는 자바 소스파일로 작성해서 쓰는 것이 바람직하므로 거의 서용돠지 않습니다.

2. 내장 객체
1)out : html 문서에 출력하기 위한 객체. 태그, 스타일, 자바스크립트를 html 문서에 출력하면 동작이 됩니다.
2)request : 요청. 사용자가 보낸 요청에 대한 정보를 저장하는 객체. 서블릿에서 메소든 인자로 선언

<<request의 파라미터 사용>>
사용자는 처리할 데이터를 request(요청)으로 보냅니다.
보내는 방법은 1) url의 쿼리스ㅡㅌ링 2) form 태그 사용 2가지입니다.
			ㄴ 1)번은 a 태그 href 속성값으로 정하기. 
			ㄴ *자바스크립트의 location.href = '요청 url과 쿼리스트링' (브라우저의 주소를 바꿈)*

요청으로 전달받은 데이터(파라미터)를 서버에서 받을 때는 request 객체를 사용하빈다. 메소드는 getParameter()

* 예제파일 *
3parameterSend.jsp
3parameterRecieve.jsp



