<< 복습 >>
1. jsp 는 HTML에 **자바 코드**을 포함한다
2. jsp 는 웹서버가 요청 받은 것을 처리하기 위해 **was(web application server)**에게 요청을 전달합니다.
3. jsp 는 요청 처리를 위해 .java 로 변환이 되는데 이것을 **서블릿**이라고 한다.
4. 3번의 **서블릿**을 처리하는 기능이 **웹컨테이너**이다.
 
* 톰캣은 웹서버 + was 기능을 한다.
* HTML, CSS, JS 에 대한 리서스(자원) 요청은 웹컨테이너가 처리하지 않습니다.

5. jsp 에는 내장객체가 있습니다. day1에서 사용한 것 : **out** , **request**
6. request 객체는 사용자가 요청한 정보를 갖고 있습니다. 
	ㄴ 그 중에서 parameter는 사용자가 보낸 요청 데이터 입니다.
	ㄴ getParameter()

<< 파라미터 보내기 방법 2 >>
+ form태그 사용
	ㄴ 입력 태그 (input, select)의 name 속성값이 파라미터 이름
								values 속성값이 파라미터 값
	ㄴ a 태그 href 속성은 요청 method가 항상 get, href는 서버의 주소
				 get 방식은 자동으로 문자인코딩을 UTF-8로 해줍니다
	ㄴ form 태그는 method 방식을 'get', 'post' 지정합니다.
				 post 방식은 문자 인코딩을 직접 설정해야합니다.
				 action 속성값으로 서버의 주소를 정합니다.
	ㄴ input의 disabled 가 true 이면 파라미터 전송이 안됩니다.
			  readonly가 true 이면 파라미터 전송 가능. 편집 불가
	ㄴ input type = hidden 일 때는 화면 표시는 안돠고 파라미터 전송은 가능
			  
			  
<< jsp 액션태그 >>			  
1. jsp:include
	ㄴ 외부 jsp 파일을포함시킵니다. 컴파일된 .class 파일을 포함합니다.
	ㄴ 여러 jsp 파일에서 공통적으로 사용되는 코드 부분을 반복해서 코딩하지 않고, 파일로 생성해서 include 합니다.
	ㄴ 효율 up
	
2. jsp:param
	ㄴ jsp:include 에서 포함시키는 jsp에 파라미터를 전달하기
	
3. jsp:useBean 태그 속성 - id:자바빈 id 변수명개념   ,   class:자바빈(객체)으로 만들어질 패키지명 클래스 지정
	ㄴ jsp:setProperty : 값 저장. getParameter와 + setter 메소드를 함께 사용하는 동작을 한다.
			ㄴ 속성 종류 property : 자바빈을 만든 클래스의 필드(변수)
					  name : 자바빈 id를 설정
					  param : input 태그의 name
					  property = "*"로 하면 모든 파라미터를 가져올 수 있습니다.
					  (단, input 태그 name 속성, dto 클래스의 필드명을 같도록 합니다.)
					  
	ㄴ jsp:getProperty : 출력
	ㄴ 기본 생성자와 setter/getter 필요
RegisterSave.js에서 사용해보세요. (getParameter 대신 사용합니다.)	
	
jsp 안에서 내장객체를 이용하여 작성하느 자바코드 대신에 사용하는 태그
		  
			  
			  