jsp의 scope이 무엇인지
: 프로그램상 사용되는 변수(데이터)가 유효한 범위/영역. 데이터를 사용할 수 있는 범위/영역
	ㄴ 종류 : pageContext	< request < session < application
*jsp:useBean의 기본 scope="page" 입니다.
여기서 page는 pageContext 입니다.

*jsp:useBean 으로 생성된 자바빈 id는 일반 변수와는 다르게 부릅니다.
자바빈은 attribute라고 부르기도 합니다. ${} ( = EL )를 사용하여 값을 가져올 수 있습니다.
	ㄴ getter 메소드 대신 필드명(프로퍼티)으로 접근 가능
:useBean 은 자바빈 생성은 setAttribute("이름","값") 메소드
				사용(가져오기)는 

	
<< jsp 내장객체 >>
	1) PageContext : java.servlet.jsp.PageContext
		JSP 페이지에 대한 정보를 저장하고 있는 객체
		
	2) Request : javax.servlet.HttpServletRequest
		웹 브라우저(HTTP)의 요청정보를 저장하고 있는 객체
		* requestScope는 하나의 요청이 끝날 때 까지 정보를 유지한다.
			ㄴ A.jsp의 요청을 B.jsp로 전달 가능
	
	3) Session : javax.servlet.http.HttpSession
		하나의 웹 브라우저의 정보(세션정보)를 저장하고 있는 객체
		* 브라우저 종료시까지 정보를 유지
	
	4) Application : javax.servlet.ServletContext
		웹 어플리케이션(Context) 정보를 저장하고 있는 객체
		* applicationScope는 서버에서 애플리케이션이 종료될 때까지 정보를 유지
---------------------------- scope 쓸 수 있는 내장객체-------------------------
	
	5) response : javax.servlet.http.HTTPServletResponse
		웹 브라우저의 요청에 대한 응답 정보를 저장하고 있는 객체	
	
	6) out : javax.servlet.jsp.jspWriter
		JSP 페이지(html 문서) 출력 스트림 객체
---------------------------- scope 쓸 수 있는 내장객체-------------------------
	
	7) page : java.lang.Object
			JSP 페이지에 대한 자바 클래스 객체
	
	8) config : java.servlet.ServletConfig
			JSP 페이지에 대한 설정 정보를 저장하고 있는 객체
			
	9) exception : java.long.Throwable
			JSP 페이지서 예외가 발생한 경우에 사용되는 객체
---------------------------------------------------------------------------

**** scope="request"일 때, forward가 같이 사용됩니다. ****
서블릿을 이용하여 개발하면 '처리'와 '화면 출력(view)' 이 파일이 분리가 됩니다.
'처리' -> 서블릿 (.java)로 구현 (지금은 먼저 '처리'기능을 .jsp 분리해서 연습하는 중)
'화면구현' -> JSP (.jsp)로 구현

예를 들면, 
MemberList.jsp 가 List.java 에서 dao 실행하고 listView.jsp에서 화면 출력합니다.
이 때, List.java 에서 lsitView.jsp 로 forward가 되고 데이터도 전달합니다.
	List.java 에 url을 정해줍니다. 예시로, list.cha (.cha는 임의로 붙는 확장자)
	

	
---------------------------- 앞으로의 계획 -------------------------
1. jsp/서블릿의 객체 위주
2. jdbc의 preparedStatement 인터페이스 사용을 mybatis 프레임웍으로 변경
3. 외부라이브러리는 최종적으로 build-배포파일 만들 때 사용됩니다.
	ㄴ 빌드 도구 (빌드 자동화) : maven(xml), gradle(kotlin)
4. 게시판(소스파일) 만들기















	
	
	out, request, session, application, response, pageContext